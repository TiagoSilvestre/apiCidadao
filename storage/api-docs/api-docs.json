{
    "openapi": "3.0.0",
    "info": {
        "title": "API de Cadastro de Pessoas",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://apicidadao.api"
        }
    ],
    "paths": {
        "/api/pessoas": {
            "get": {
                "tags": [
                    "Pessoas"
                ],
                "summary": "Retorna a lista de pessoas cadastradas",
                "operationId": "findAllPerson",
                "parameters": [
                    {
                        "name": "cpf",
                        "in": "query",
                        "description": "Filtra as pessoas pelo cpf",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Person"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "content": {}
                    }
                }
            }
        },
        "/api/pessoa": {
            "post": {
                "tags": [
                    "Pessoas"
                ],
                "summary": "Cadastra uma nova pessoa",
                "operationId": "addPerson",
                "requestBody": {
                    "description": "Objeto pessoa que será enviado para a api",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PersonPayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "405": {
                        "description": "Invalid input",
                        "content": {}
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/api/pessoa/{personId}": {
            "get": {
                "tags": [
                    "Pessoas"
                ],
                "summary": "Busca uma pessoa pelo ID",
                "description": "Retorna uma pessoa",
                "operationId": "getPersonById",
                "parameters": [
                    {
                        "name": "personId",
                        "in": "path",
                        "description": "ID da pessoa para retornar",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied",
                        "content": {}
                    },
                    "404": {
                        "description": "Person not found",
                        "content": {}
                    }
                }
            },
            "put": {
                "tags": [
                    "Pessoas"
                ],
                "summary": "Atualiza os dados de uma pessoa já cadastrada",
                "operationId": "updatePersonWithForm",
                "parameters": [
                    {
                        "name": "personId",
                        "in": "path",
                        "description": "ID da pessoa que será atualizada",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonPayload"
                                }
                            }
                    }
                },
                "responses": {
                    "405": {
                        "description": "Invalid input",
                        "content": {}
                    }
                }
            },
            "delete": {
                "tags": [
                    "Pessoas"
                ],
                "summary": "Deleta uma pessoa",
                "operationId": "deletePerson",
                "parameters": [
                    {
                        "name": "personId",
                        "in": "path",
                        "description": "Id da pessoa para deletar",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied",
                        "content": {}
                    },
                    "404": {
                        "description": "Person not found",
                        "content": {}
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Address": {
                "type": "object",
                "properties": {
                    "cep": {
                        "type": "string"
                    },
                    "street": {
                        "type": "string"
                    },
                    "district": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    }
                }
            },
            "AddressPayload": {
                "type": "object",
                "properties": {
                    "cep": {
                        "type": "string"
                    }
                }
            },
            "Contact": {
                "type": "object",
                "properties": {
                    "phone": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "mobile": {
                        "type": "string"
                    }
                }
            },
            "Person": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "cpf": {
                        "type": "string"
                    },
                    "address": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "contact": {
                        "$ref": "#/components/schemas/Contact"
                    }
                }
            },
            "PersonPayload": {
                "type": "object",
                "properties": {
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "cpf": {
                        "type": "string"
                    },
                    "address": {
                        "$ref": "#/components/schemas/AddressPayload"
                    },
                    "contact": {
                        "$ref": "#/components/schemas/Contact"
                    }
                }
            }
        }
    }
}